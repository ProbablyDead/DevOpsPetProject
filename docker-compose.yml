services:
  postgres:
    image: postgres:17.2-alpine
    container_name: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d telegram"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - network
    ports: 
      - 5432:5432
    env_file:
      - ./database/.env
    volumes:
          - type: bind
            source: ./postgres_data
            target: /var/lib/postgresql/data/
    restart: on-failure
  database:
    depends_on:
      postgres: 
        condition: service_healthy
        restart: true
    build:
      context: ./database
    image: yakiza/database:latest
    container_name: database
    networks:
      - network
    ports: 
      - 8081:8081
    env_file:
        - ./database/.env
    restart: on-failure
  image_processor:
    build:
      context: ./image_processor
    image: yakiza/image_processor:latest
    container_name: image_processor
    networks:
      - network
    ports: 
      - 8083:8083
    environment:
      PORT: 8083
    restart: on-failure
  payment:
    build:
      context: ./payment
    image: yakiza/payment:latest
    container_name: payment
    networks:
      - network
    ports: 
      - 8082:8082
    environment:
      PORT: 8082
    restart: on-failure
  tg_bot:
    build:
      context: ./bot
    image: yakiza/tg_bot:latest
    container_name: tg_bot
    networks:
      - network
    ports:
      - 8080:8080
    env_file:
      - ./bot/.env
    restart: on-failure
  reporting:
    build:
      context: ./reporting
    image: yakiza/reporting:latest
    container_name: reporting
    networks:
      - network
    ports: 
      - 8084:8084
    env_file:
      ./reporting/.env
    environment:
      CREDENTIALS_FILE: /run/secrets/google_creds
    secrets:
      - google_creds
    restart: on-failure


networks:
    network:
      name: network
      driver: bridge

secrets:
  google_creds:
    file: ./reporting/src/google_api/secrets/credentials.json
